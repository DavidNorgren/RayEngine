//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324574
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_20
.address_size 64

	// .globl	_Z6anyHitv
.global .align 4 .f32 offset;
.global .align 4 .f32 windowWidth;
.global .align 1 .b8 lights[1];
.global .texref sampler;
.global .align 4 .b8 org[12];
.global .align 16 .b8 ambient[16];
.global .align 16 .b8 specular[16];
.global .align 16 .b8 diffuse[16];
.global .align 4 .f32 shineExponent;
.global .align 4 .f32 reflectIntensity;
.global .align 4 .f32 refractIndex;
.global .align 16 .b8 sceneAmbient[16];
.global .align 8 .b8 sceneObj[4];
.global .align 4 .u32 enableReflections;
.global .align 4 .u32 maxReflections;
.global .align 4 .u32 enableRefractions;
.global .align 4 .u32 maxRefractions;
.global .align 4 .u32 enableAo;
.global .align 4 .f32 aoRadius;
.global .align 4 .f32 aoPower;
.global .align 4 .u32 aoSamples;
.global .align 4 .u32 aoSamplesSqrt;
.global .texref aoNoise;
.global .align 4 .f32 aoNoiseScale;
.global .align 8 .b8 normal[12];
.global .align 8 .b8 texCoord[8];
.global .align 4 .b8 ray[36];
.global .align 16 .b8 curColorData[32];
.global .align 4 .b8 curShadowData[4];
.global .align 8 .b8 launchIndex[8];
.global .align 8 .b8 launchDim[8];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo6offsetE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11windowWidthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3orgE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7ambientE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8specularE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7diffuseE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shineExponentE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16reflectIntensityE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12refractIndexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12sceneAmbientE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8sceneObjE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17enableReflectionsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14maxReflectionsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17enableRefractionsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14maxRefractionsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8enableAoE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8aoRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7aoPowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9aoSamplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13aoSamplesSqrtE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12aoNoiseScaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texCoordE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12curColorDataE[8] = {82, 97, 121, 0, 32, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13curShadowDataE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11launchIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9launchDimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6offsetE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11windowWidthE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3orgE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7ambientE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8specularE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7diffuseE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13shineExponentE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16reflectIntensityE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12refractIndexE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12sceneAmbientE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8sceneObjE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17enableReflectionsE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14maxReflectionsE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17enableRefractionsE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14maxRefractionsE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8enableAoE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8aoRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7aoPowerE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9aoSamplesE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13aoSamplesSqrtE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12aoNoiseScaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texCoordE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12curColorDataE[13] = {82, 97, 121, 67, 111, 108, 111, 114, 68, 97, 116, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13curShadowDataE[14] = {82, 97, 121, 83, 104, 97, 100, 111, 119, 68, 97, 116, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11launchIndexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9launchDimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum6offsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11windowWidthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3orgE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7ambientE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8specularE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7diffuseE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shineExponentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16reflectIntensityE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12refractIndexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12sceneAmbientE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8sceneObjE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17enableReflectionsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14maxReflectionsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17enableRefractionsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14maxRefractionsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8enableAoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8aoRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7aoPowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9aoSamplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13aoSamplesSqrtE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12aoNoiseScaleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texCoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12curColorDataE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13curShadowDataE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11launchIndexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9launchDimE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic6offsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11windowWidthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3orgE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7ambientE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8specularE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7diffuseE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13shineExponentE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16reflectIntensityE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12refractIndexE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12sceneAmbientE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8sceneObjE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17enableReflectionsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14maxReflectionsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17enableRefractionsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14maxRefractionsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8enableAoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8aoRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7aoPowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9aoSamplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13aoSamplesSqrtE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12aoNoiseScaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8texCoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12curColorDataE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13curShadowDataE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9launchDimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation6offsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11windowWidthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3orgE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7ambientE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8specularE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7diffuseE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shineExponentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16reflectIntensityE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12refractIndexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12sceneAmbientE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8sceneObjE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17enableReflectionsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14maxReflectionsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17enableRefractionsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14maxRefractionsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8enableAoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8aoRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7aoPowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9aoSamplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13aoSamplesSqrtE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12aoNoiseScaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texCoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12curColorDataE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13curShadowDataE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11launchIndexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9launchDimE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6anyHitv(

)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[curShadowData], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z10closestHitv
.visible .entry _Z10closestHitv(

)
{
	.local .align 16 .b8 	__local_depot1[112];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<79>;
	.reg .s16 	%rs<33>;
	.reg .f32 	%f<649>;
	.reg .s32 	%r<259>;
	.reg .s64 	%rd<72>;


	mov.u64 	%rd71, __local_depot1;
	cvta.local.u64 	%SP, %rd71;
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd25;
	mov.u64 	%rd26, ray;
	add.s64 	%rd27, %rd26, 12;
	ldu.global.f32 	%f180, [%rd27];
	add.s64 	%rd28, %rd26, 32;
	ldu.global.f32 	%f181, [%rd28];
	add.s64 	%rd29, %rd26, 16;
	ldu.global.f32 	%f182, [%rd29];
	add.s64 	%rd30, %rd26, 20;
	ldu.global.f32 	%f183, [%rd30];
	ldu.global.f32 	%f184, [ray];
	fma.rn.f32 	%f1, %f181, %f180, %f184;
	add.s64 	%rd31, %rd26, 4;
	ldu.global.f32 	%f185, [%rd31];
	fma.rn.f32 	%f2, %f181, %f182, %f185;
	add.s64 	%rd32, %rd26, 8;
	ldu.global.f32 	%f186, [%rd32];
	fma.rn.f32 	%f3, %f181, %f183, %f186;
	ldu.global.f32 	%f4, [org];
	mov.u64 	%rd33, org;
	add.s64 	%rd34, %rd33, 4;
	ldu.global.f32 	%f5, [%rd34];
	add.s64 	%rd35, %rd33, 8;
	ldu.global.f32 	%f6, [%rd35];
	ldu.global.v2.f32 	{%f187, %f188}, [texCoord];
	tex.2d.v4.f32.f32	{%f7, %f8, %f9, %f10}, [sampler, {%f187, %f188}];
	ld.global.v4.f32 	{%f191, %f192, %f193, %f194}, [diffuse];
	mul.f32 	%f196, %f10, %f194;
	mov.f32 	%f197, 0f3F800000;
	sub.f32 	%f14, %f197, %f196;
	mov.u64 	%rd37, lights;
	cvta.global.u64 	%rd24, %rd37;
	mov.u32 	%r81, 1;
	mov.u32 	%r82, 48;
	// inline asm
	call (%rd20, %rd21, %rd22, %rd23), _rt_buffer_get_size_64, (%rd24, %r81, %r82);
	// inline asm
	cvt.u32.u64	%r83, %rd20;
	setp.eq.s32	%p2, %r83, 0;
	mov.f32 	%f619, 0f00000000;
	mov.f32 	%f613, %f619;
	mov.f32 	%f612, %f619;
	mov.f32 	%f611, %f619;
	mov.f32 	%f610, %f619;
	mov.f32 	%f609, %f619;
	@%p2 bra 	BB1_22;

	sub.f32 	%f204, %f4, %f1;
	sub.f32 	%f205, %f5, %f2;
	sub.f32 	%f206, %f6, %f3;
	mul.f32 	%f207, %f205, %f205;
	fma.rn.f32 	%f208, %f204, %f204, %f207;
	fma.rn.f32 	%f209, %f206, %f206, %f208;
	sqrt.rn.f32 	%f210, %f209;
	rcp.rn.f32 	%f211, %f210;
	mul.f32 	%f15, %f204, %f211;
	mul.f32 	%f16, %f205, %f211;
	mul.f32 	%f17, %f206, %f211;
	add.u64 	%rd3, %SP, 104;
	cvta.to.local.u64 	%rd2, %rd3;
	mov.f32 	%f203, 0f00000000;
	mov.f32 	%f613, %f203;
	mov.f32 	%f612, %f203;
	mov.f32 	%f611, %f203;
	mov.f32 	%f610, %f203;
	mov.f32 	%f609, %f203;
	mov.u32 	%r237, 0;
	mov.u64 	%rd38, 0;
	mov.u64 	%rd65, %rd38;
	mov.f32 	%f620, %f203;
	bra.uni 	BB1_2;

BB1_8:
	setp.eq.f32	%p11, %f49, 0f7F800000;
	@%p11 bra 	BB1_18;
	bra.uni 	BB1_9;

BB1_18:
	setp.gt.f32	%p32, %f48, 0f3F800000;
	selp.b32	%r105, 2139095040, 0, %p32;
	xor.b32  	%r106, %r105, 2139095040;
	setp.lt.f32	%p33, %f45, 0f00000000;
	selp.b32	%r107, %r106, %r105, %p33;
	mov.b32 	 %f345, %r107;
	setp.eq.f32	%p34, %f46, 0fBF800000;
	selp.f32	%f57, 0f3F800000, %f345, %p34;
	mov.f32 	%f608, %f57;
	bra.uni 	BB1_20;

BB1_9:
	setp.eq.f32	%p12, %f48, 0f7F800000;
	@%p12 bra 	BB1_17;
	bra.uni 	BB1_10;

BB1_17:
	setp.eq.f32	%p28, %f47, 0f3F800000;
	setp.ltu.f32	%p29, %f45, 0f00000000;
	selp.b32	%r102, 0, 2139095040, %p29;
	setp.lt.f32	%p30, %f46, 0f00000000;
	and.pred  	%p31, %p30, %p28;
	or.b32  	%r103, %r102, -2147483648;
	selp.b32	%r104, %r103, %r102, %p31;
	mov.b32 	 %f56, %r104;
	mov.f32 	%f608, %f56;
	bra.uni 	BB1_20;

BB1_10:
	setp.eq.f32	%p13, %f46, 0f00000000;
	@%p13 bra 	BB1_16;
	bra.uni 	BB1_11;

BB1_16:
	setp.eq.f32	%p26, %f47, 0f3F800000;
	add.f32 	%f344, %f46, %f46;
	mov.b32 	 %r98, %f344;
	selp.b32	%r99, %r98, 0, %p26;
	or.b32  	%r100, %r99, 2139095040;
	setp.lt.f32	%p27, %f45, 0f00000000;
	selp.b32	%r101, %r100, %r99, %p27;
	mov.b32 	 %f55, %r101;
	mov.f32 	%f608, %f55;
	bra.uni 	BB1_20;

BB1_11:
	setp.geu.f32	%p14, %f46, 0f00000000;
	@%p14 bra 	BB1_13;

	cvt.rzi.f32.f32	%f268, %f45;
	setp.neu.f32	%p15, %f268, %f45;
	mov.f32 	%f267, 0f7FFFFFFF;
	mov.f32 	%f608, %f267;
	@%p15 bra 	BB1_20;

BB1_13:
	setp.lt.f32	%p16, %f48, 0f00800000;
	selp.f32	%f273, 0fC3170000, 0fC2FE0000, %p16;
	mul.f32 	%f274, %f48, 0f4B800000;
	selp.f32	%f275, %f274, %f48, %p16;
	mov.b32 	 %r90, %f275;
	and.b32  	%r91, %r90, 8388607;
	or.b32  	%r92, %r91, 1065353216;
	mov.b32 	 %f276, %r92;
	shr.u32 	%r93, %r90, 23;
	cvt.rn.f32.u32	%f277, %r93;
	add.f32 	%f278, %f273, %f277;
	setp.gt.f32	%p17, %f276, 0f3FB504F3;
	mul.f32 	%f279, %f276, 0f3F000000;
	add.f32 	%f280, %f278, 0f3F800000;
	selp.f32	%f281, %f279, %f276, %p17;
	selp.f32	%f282, %f280, %f278, %p17;
	add.f32 	%f283, %f281, 0fBF800000;
	add.f32 	%f270, %f281, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f269,%f270;
	// inline asm
	add.f32 	%f284, %f283, %f283;
	mul.f32 	%f285, %f284, %f269;
	mul.f32 	%f286, %f285, %f285;
	mov.f32 	%f287, 0f3C4CAF63;
	mov.f32 	%f288, 0f3B18F0FE;
	fma.rn.f32 	%f289, %f288, %f286, %f287;
	mov.f32 	%f290, 0f3DAAAABD;
	fma.rn.f32 	%f291, %f289, %f286, %f290;
	mul.rn.f32 	%f292, %f291, %f286;
	mul.rn.f32 	%f293, %f292, %f285;
	sub.f32 	%f294, %f283, %f285;
	add.f32 	%f295, %f294, %f294;
	neg.f32 	%f296, %f285;
	fma.rn.f32 	%f297, %f296, %f283, %f295;
	mul.rn.f32 	%f298, %f269, %f297;
	add.f32 	%f299, %f285, %f293;
	sub.f32 	%f300, %f285, %f299;
	add.f32 	%f301, %f293, %f300;
	add.f32 	%f302, %f298, %f301;
	add.f32 	%f303, %f299, %f302;
	sub.f32 	%f304, %f299, %f303;
	add.f32 	%f305, %f302, %f304;
	mov.f32 	%f306, 0f3F317200;
	mul.rn.f32 	%f307, %f282, %f306;
	mov.f32 	%f308, 0f35BFBE8E;
	mul.rn.f32 	%f309, %f282, %f308;
	add.f32 	%f310, %f307, %f303;
	sub.f32 	%f311, %f307, %f310;
	add.f32 	%f312, %f303, %f311;
	add.f32 	%f313, %f305, %f312;
	add.f32 	%f314, %f309, %f313;
	add.f32 	%f315, %f310, %f314;
	sub.f32 	%f316, %f310, %f315;
	add.f32 	%f317, %f314, %f316;
	mul.f32 	%f318, %f45, 0f39000000;
	setp.gt.f32	%p18, %f49, 0f77F684DF;
	selp.f32	%f319, %f318, %f45, %p18;
	mul.rn.f32 	%f320, %f319, %f315;
	neg.f32 	%f321, %f320;
	fma.rn.f32 	%f322, %f319, %f315, %f321;
	fma.rn.f32 	%f323, %f319, %f317, %f322;
	fma.rn.f32 	%f325, %f243, %f315, %f323;
	add.rn.f32 	%f326, %f320, %f325;
	neg.f32 	%f327, %f326;
	add.rn.f32 	%f328, %f320, %f327;
	add.rn.f32 	%f329, %f328, %f325;
	mov.b32 	 %r94, %f326;
	setp.eq.s32	%p19, %r94, 1118925336;
	add.s32 	%r95, %r94, -1;
	mov.b32 	 %f330, %r95;
	add.f32 	%f331, %f329, 0f37000000;
	selp.f32	%f50, %f331, %f329, %p19;
	selp.f32	%f332, %f330, %f326, %p19;
	mul.f32 	%f333, %f332, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f334, %f333;
	mov.f32 	%f335, 0fBF317200;
	fma.rn.f32 	%f336, %f334, %f335, %f332;
	mov.f32 	%f337, 0fB5BFBE8E;
	fma.rn.f32 	%f338, %f334, %f337, %f336;
	mul.f32 	%f272, %f338, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f271,%f272;
	// inline asm
	add.f32 	%f339, %f334, 0f00000000;
	ex2.approx.f32 	%f340, %f339;
	mul.f32 	%f341, %f271, %f340;
	setp.lt.f32	%p20, %f332, 0fC2D20000;
	selp.f32	%f342, 0f00000000, %f341, %p20;
	setp.gt.f32	%p21, %f332, 0f42D20000;
	selp.f32	%f607, 0f7F800000, %f342, %p21;
	setp.eq.f32	%p22, %f607, 0f7F800000;
	@%p22 bra 	BB1_15;

	fma.rn.f32 	%f607, %f607, %f50, %f607;

BB1_15:
	setp.eq.f32	%p23, %f47, 0f3F800000;
	setp.lt.f32	%p24, %f46, 0f00000000;
	and.pred  	%p25, %p24, %p23;
	mov.b32 	 %r96, %f607;
	xor.b32  	%r97, %r96, -2147483648;
	mov.b32 	 %f343, %r97;
	selp.f32	%f54, %f343, %f607, %p25;
	mov.f32 	%f608, %f54;
	bra.uni 	BB1_20;

BB1_2:
	mov.f32 	%f615, %f620;
	mov.f32 	%f23, %f615;
	mov.u64 	%rd4, %rd65;
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd24, %r81, %r82, %rd4, %rd38, %rd38, %rd38);
	// inline asm
	ld.v4.f32 	{%f212, %f213, %f214, %f215}, [%rd39+16];
	ld.f32 	%f31, [%rd39+32];
	ld.v4.f32 	{%f216, %f217, %f218, %f219}, [%rd39];
	sub.f32 	%f220, %f216, %f1;
	sub.f32 	%f221, %f217, %f2;
	sub.f32 	%f222, %f218, %f3;
	mul.f32 	%f223, %f221, %f221;
	fma.rn.f32 	%f224, %f220, %f220, %f223;
	fma.rn.f32 	%f225, %f222, %f222, %f224;
	sqrt.rn.f32 	%f32, %f225;
	rcp.rn.f32 	%f226, %f32;
	mul.f32 	%f33, %f226, %f220;
	mul.f32 	%f34, %f226, %f221;
	mul.f32 	%f35, %f226, %f222;
	div.rn.f32 	%f227, %f32, %f31;
	sub.f32 	%f229, %f197, %f227;
	max.f32 	%f36, %f229, %f203;
	setp.leu.f32	%p3, %f36, 0f00000000;
	mov.f32 	%f621, %f23;
	@%p3 bra 	BB1_21;

	st.local.f32 	[%rd2], %f36;
	ld.global.u32 	%r87, [sceneObj];
	mov.f32 	%f237, 0f3C23D70A;
	mov.u32 	%r89, 4;
	// inline asm
	call _rt_trace_64, (%r87, %f1, %f2, %f3, %f33, %f34, %f35, %r81, %f237, %f32, %rd3, %r89);
	// inline asm
	ld.local.f32 	%f37, [%rd2];
	setp.leu.f32	%p4, %f37, 0f00000000;
	mov.f32 	%f616, %f23;
	mov.f32 	%f621, %f616;
	@%p4 bra 	BB1_21;

	ld.global.v2.f32 	{%f239, %f240}, [normal];
	mul.f32 	%f241, %f34, %f240;
	fma.rn.f32 	%f242, %f33, %f239, %f241;
	ld.global.f32 	%f40, [normal+8];
	fma.rn.f32 	%f41, %f35, %f40, %f242;
	mov.f32 	%f243, 0f00000000;
	max.f32 	%f244, %f41, %f243;
	mul.f32 	%f245, %f244, %f37;
	fma.rn.f32 	%f621, %f212, %f245, %f23;
	fma.rn.f32 	%f613, %f213, %f245, %f613;
	fma.rn.f32 	%f612, %f214, %f245, %f612;
	ld.global.f32 	%f45, [shineExponent];
	setp.leu.f32	%p5, %f45, 0f00000000;
	@%p5 bra 	BB1_21;

	add.f32 	%f247, %f239, %f239;
	mul.f32 	%f248, %f247, %f41;
	add.f32 	%f249, %f240, %f240;
	mul.f32 	%f250, %f249, %f41;
	add.f32 	%f251, %f40, %f40;
	mul.f32 	%f252, %f251, %f41;
	sub.f32 	%f253, %f33, %f248;
	sub.f32 	%f254, %f34, %f250;
	sub.f32 	%f255, %f35, %f252;
	mul.f32 	%f256, %f15, %f253;
	mul.f32 	%f257, %f16, %f254;
	neg.f32 	%f258, %f257;
	sub.f32 	%f259, %f258, %f256;
	mul.f32 	%f260, %f17, %f255;
	sub.f32 	%f261, %f259, %f260;
	max.f32 	%f46, %f261, %f243;
	mul.f32 	%f263, %f45, 0f3F000000;
	cvt.rzi.f32.f32	%f264, %f263;
	add.f32 	%f265, %f264, %f264;
	sub.f32 	%f266, %f45, %f265;
	abs.f32 	%f47, %f266;
	setp.eq.f32	%p6, %f46, 0f3F800000;
	setp.eq.f32	%p7, %f45, 0f00000000;
	or.pred  	%p8, %p6, %p7;
	mov.f32 	%f608, %f197;
	@%p8 bra 	BB1_20;

	abs.f32 	%f48, %f46;
	setp.gtu.f32	%p9, %f48, 0f7F800000;
	@%p9 bra 	BB1_19;

	abs.f32 	%f49, %f45;
	setp.gtu.f32	%p10, %f49, 0f7F800000;
	@%p10 bra 	BB1_19;
	bra.uni 	BB1_8;

BB1_19:
	add.f32 	%f58, %f46, %f45;
	mov.f32 	%f608, %f58;

BB1_20:
	mov.f32 	%f59, %f608;
	mul.f32 	%f346, %f59, %f37;
	ld.global.v4.f32 	{%f347, %f348, %f349, %f350}, [specular];
	fma.rn.f32 	%f611, %f347, %f346, %f611;
	fma.rn.f32 	%f610, %f346, %f348, %f610;
	fma.rn.f32 	%f609, %f346, %f349, %f609;

BB1_21:
	mov.f32 	%f63, %f621;
	add.s32 	%r237, %r237, 1;
	cvt.s64.s32	%rd5, %r237;
	// inline asm
	call (%rd47, %rd48, %rd49, %rd50), _rt_buffer_get_size_64, (%rd24, %r81, %r82);
	// inline asm
	and.b64  	%rd53, %rd47, 4294967295;
	setp.lt.u64	%p35, %rd5, %rd53;
	mov.u64 	%rd65, %rd5;
	mov.f32 	%f619, %f63;
	mov.f32 	%f620, %f63;
	@%p35 bra 	BB1_2;

BB1_22:
	mov.f32 	%f624, 0f00000000;
	mul.f32 	%f75, %f191, %f7;
	mul.f32 	%f76, %f8, %f192;
	mul.f32 	%f77, %f9, %f193;
	ld.global.u32 	%r110, [enableReflections];
	setp.ne.s32	%p36, %r110, 0;
	ld.global.f32 	%f357, [reflectIntensity];
	setp.gt.f32	%p37, %f357, 0f00000000;
	and.pred  	%p38, %p36, %p37;
	mov.f32 	%f623, %f624;
	mov.f32 	%f622, %f624;
	@!%p38 bra 	BB1_25;
	bra.uni 	BB1_23;

BB1_23:
	ld.global.u64 	%rd6, [curColorData+16];
	cvt.u32.u64	%r3, %rd6;
	ld.global.u32 	%r111, [maxReflections];
	mov.f32 	%f624, 0f00000000;
	mov.f32 	%f623, %f624;
	mov.f32 	%f622, %f624;
	setp.ge.s32	%p39, %r3, %r111;
	@%p39 bra 	BB1_25;

	shr.u64 	%rd55, %rd6, 32;
	ld.global.v2.f32 	{%f369, %f370}, [normal];
	add.f32 	%f372, %f369, %f369;
	add.f32 	%f374, %f370, %f370;
	ld.global.f32 	%f375, [normal+8];
	add.f32 	%f376, %f375, %f375;
	ld.global.f32 	%f377, [ray+12];
	ld.global.f32 	%f378, [ray+16];
	mul.f32 	%f379, %f370, %f378;
	fma.rn.f32 	%f380, %f369, %f377, %f379;
	ld.global.f32 	%f381, [ray+20];
	fma.rn.f32 	%f382, %f375, %f381, %f380;
	mul.f32 	%f383, %f372, %f382;
	mul.f32 	%f384, %f374, %f382;
	mul.f32 	%f385, %f376, %f382;
	sub.f32 	%f364, %f377, %f383;
	sub.f32 	%f365, %f378, %f384;
	sub.f32 	%f366, %f381, %f385;
	add.s32 	%r115, %r3, 1;
	cvt.u32.u64	%r116, %rd55;
	add.u64 	%rd54, %SP, 32;
	cvta.to.local.u64 	%rd56, %rd54;
	st.local.v2.u32 	[%rd56+16], {%r115, %r116};
	ld.global.u32 	%r112, [sceneObj];
	mov.u32 	%r113, 0;
	mov.f32 	%f367, 0f3C23D70A;
	mov.f32 	%f368, 0f6C4ECB8F;
	mov.u32 	%r114, 32;
	// inline asm
	call _rt_trace_64, (%r112, %f1, %f2, %f3, %f364, %f365, %f366, %r113, %f367, %f368, %rd54, %r114);
	// inline asm
	ld.global.f32 	%f386, [reflectIntensity];
	ld.local.v4.f32 	{%f387, %f388, %f389, %f390}, [%rd56];
	mul.f32 	%f622, %f386, %f387;
	mul.f32 	%f623, %f386, %f388;
	mul.f32 	%f624, %f386, %f389;

BB1_25:
	mov.f32 	%f635, 0f00000000;
	ld.global.u32 	%r117, [enableRefractions];
	setp.ne.s32	%p40, %r117, 0;
	setp.gt.f32	%p41, %f14, 0f00000000;
	and.pred  	%p42, %p40, %p41;
	mov.f32 	%f634, %f635;
	mov.f32 	%f633, %f635;
	@!%p42 bra 	BB1_33;
	bra.uni 	BB1_26;

BB1_26:
	ld.global.u32 	%r118, [maxRefractions];
	ld.global.u32 	%r119, [curColorData+20];
	mov.f32 	%f635, 0f00000000;
	mov.f32 	%f634, %f635;
	mov.f32 	%f633, %f635;
	setp.ge.s32	%p43, %r119, %r118;
	@%p43 bra 	BB1_33;

	ld.global.f32 	%f629, [refractIndex];
	ld.global.f32 	%f85, [ray+12];
	ld.global.v2.f32 	{%f400, %f401}, [normal];
	mov.f32 	%f625, %f400;
	mov.f32 	%f626, %f401;
	ld.global.f32 	%f627, [normal+8];
	ld.global.f32 	%f87, [ray+16];
	mul.f32 	%f402, %f401, %f87;
	fma.rn.f32 	%f403, %f85, %f400, %f402;
	ld.global.f32 	%f89, [ray+20];
	fma.rn.f32 	%f628, %f627, %f89, %f403;
	setp.gt.f32	%p44, %f628, 0f00000000;
	@%p44 bra 	BB1_29;
	bra.uni 	BB1_28;

BB1_29:
	ld.global.v2.f32 	{%f404, %f405}, [normal];
	neg.f32 	%f625, %f404;
	neg.f32 	%f626, %f405;
	ld.global.f32 	%f408, [normal+8];
	neg.f32 	%f627, %f408;
	neg.f32 	%f628, %f628;
	bra.uni 	BB1_30;

BB1_28:
	rcp.rn.f32 	%f629, %f629;

BB1_30:
	mul.f32 	%f412, %f628, %f628;
	mov.f32 	%f413, 0f3F800000;
	sub.f32 	%f414, %f413, %f412;
	mul.f32 	%f415, %f629, %f629;
	mul.f32 	%f416, %f415, %f414;
	sub.f32 	%f102, %f413, %f416;
	setp.lt.f32	%p46, %f102, 0f00000000;
	mov.f32 	%f632, 0f00000000;
	mov.f32 	%f631, %f632;
	mov.f32 	%f630, %f632;
	mov.pred 	%p78, -1;
	@%p46 bra 	BB1_32;

	mul.f32 	%f417, %f629, %f85;
	sqrt.rn.f32 	%f418, %f102;
	fma.rn.f32 	%f419, %f628, %f629, %f418;
	mul.f32 	%f420, %f625, %f419;
	mul.f32 	%f421, %f626, %f419;
	mul.f32 	%f422, %f627, %f419;
	sub.f32 	%f423, %f417, %f420;
	mul.f32 	%f424, %f629, %f87;
	sub.f32 	%f425, %f424, %f421;
	mul.f32 	%f426, %f629, %f89;
	sub.f32 	%f427, %f426, %f422;
	mul.f32 	%f428, %f425, %f425;
	fma.rn.f32 	%f429, %f423, %f423, %f428;
	fma.rn.f32 	%f430, %f427, %f427, %f429;
	sqrt.rn.f32 	%f431, %f430;
	rcp.rn.f32 	%f432, %f431;
	mul.f32 	%f630, %f432, %f423;
	mul.f32 	%f631, %f432, %f425;
	mul.f32 	%f632, %f432, %f427;
	mov.pred 	%p78, 0;

BB1_32:
	ld.global.f32 	%f441, [ray+20];
	ld.global.f32 	%f442, [ray+16];
	ld.global.f32 	%f443, [ray+12];
	selp.f32	%f436, %f443, %f630, %p78;
	selp.f32	%f437, %f442, %f631, %p78;
	selp.f32	%f438, %f441, %f632, %p78;
	ld.global.v2.u32 	{%r123, %r124}, [curColorData+16];
	add.s32 	%r127, %r124, 1;
	add.u64 	%rd57, %SP, 64;
	cvta.to.local.u64 	%rd58, %rd57;
	st.local.v2.u32 	[%rd58+16], {%r123, %r127};
	ld.global.u32 	%r120, [sceneObj];
	mov.u32 	%r121, 0;
	mov.f32 	%f439, 0f3C23D70A;
	mov.f32 	%f440, 0f6C4ECB8F;
	mov.u32 	%r122, 32;
	// inline asm
	call _rt_trace_64, (%r120, %f1, %f2, %f3, %f436, %f437, %f438, %r121, %f439, %f440, %rd57, %r122);
	// inline asm
	ld.local.v4.f32 	{%f444, %f445, %f446, %f447}, [%rd58];
	mul.f32 	%f633, %f14, %f444;
	mul.f32 	%f634, %f14, %f445;
	mul.f32 	%f635, %f14, %f446;

BB1_33:
	mov.f32 	%f648, 0f00000000;
	ld.global.u32 	%r128, [enableAo];
	setp.eq.s32	%p48, %r128, 0;
	@%p48 bra 	BB1_82;

	ld.global.u32 	%r4, [aoSamples];
	ld.global.u32 	%r5, [aoSamplesSqrt];
	ld.global.v2.u32 	{%r129, %r130}, [launchIndex];
	cvt.rn.f32.u32	%f453, %r129;
	cvt.rn.f32.u32	%f454, %r130;
	ld.global.v2.u32 	{%r133, %r134}, [launchDim];
	cvt.rn.f32.u32	%f455, %r133;
	cvt.rn.f32.u32	%f456, %r134;
	div.rn.f32 	%f457, %f453, %f455;
	div.rn.f32 	%f458, %f454, %f456;
	ld.global.f32 	%f459, [aoNoiseScale];
	mul.f32 	%f460, %f457, %f459;
	mul.f32 	%f461, %f458, %f459;
	tex.2d.v4.f32.f32	{%f115, %f116, %f117, %f118}, [aoNoise, {%f460, %f461}];
	ld.global.v2.f32 	{%f462, %f463}, [normal];
	ld.global.f32 	%f123, [normal+8];
	abs.f32 	%f464, %f462;
	abs.f32 	%f465, %f123;
	setp.gt.f32	%p49, %f464, %f465;
	neg.f32 	%f466, %f463;
	neg.f32 	%f467, %f123;
	selp.f32	%f468, %f466, 0f00000000, %p49;
	selp.f32	%f469, %f462, %f467, %p49;
	selp.f32	%f470, 0f00000000, %f463, %p49;
	mul.f32 	%f471, %f469, %f469;
	fma.rn.f32 	%f472, %f468, %f468, %f471;
	fma.rn.f32 	%f473, %f470, %f470, %f472;
	sqrt.rn.f32 	%f474, %f473;
	rcp.rn.f32 	%f475, %f474;
	mul.f32 	%f125, %f468, %f475;
	mul.f32 	%f126, %f469, %f475;
	mul.f32 	%f127, %f470, %f475;
	ld.global.u32 	%r137, [aoSamples];
	mov.f32 	%f647, 0f00000000;
	setp.lt.s32	%p50, %r137, 1;
	@%p50 bra 	BB1_81;

	cvt.rn.f32.s32	%f477, %r5;
	rcp.rn.f32 	%f128, %f477;
	mul.f32 	%f478, %f123, %f126;
	mul.f32 	%f479, %f463, %f127;
	sub.f32 	%f129, %f478, %f479;
	mul.f32 	%f480, %f462, %f127;
	mul.f32 	%f481, %f123, %f125;
	sub.f32 	%f130, %f480, %f481;
	mul.f32 	%f482, %f463, %f125;
	mul.f32 	%f483, %f462, %f126;
	sub.f32 	%f131, %f482, %f483;
	add.u64 	%rd9, %SP, 96;
	cvta.to.local.u64 	%rd8, %rd9;
	mov.f32 	%f647, 0f00000000;
	mov.u32 	%r238, 0;

BB1_36:
	ld.global.u32 	%r139, [aoSamplesSqrt];
	rem.s32 	%r140, %r238, %r139;
	cvt.rn.f32.s32	%f484, %r140;
	add.f32 	%f485, %f115, %f484;
	mul.f32 	%f486, %f128, %f485;
	div.s32 	%r141, %r238, %r139;
	cvt.rn.f32.s32	%f487, %r141;
	add.f32 	%f488, %f116, %f487;
	mul.f32 	%f489, %f128, %f488;
	sqrt.rn.f32 	%f133, %f486;
	mul.f32 	%f134, %f489, 0f40C90FDB;
	abs.f32 	%f135, %f134;
	setp.neu.f32	%p51, %f135, 0f7F800000;
	mov.f32 	%f642, %f134;
	@%p51 bra 	BB1_38;

	mov.f32 	%f490, 0f00000000;
	mul.rn.f32 	%f136, %f134, %f490;
	mov.f32 	%f642, %f136;

BB1_38:
	mov.f32 	%f137, %f642;
	mul.f32 	%f491, %f137, 0f3F22F983;
	cvt.rni.s32.f32	%r248, %f491;
	cvt.rn.f32.s32	%f492, %r248;
	neg.f32 	%f493, %f492;
	mov.f32 	%f494, 0f3FC90FDA;
	fma.rn.f32 	%f495, %f493, %f494, %f137;
	mov.f32 	%f496, 0f33A22168;
	fma.rn.f32 	%f497, %f493, %f496, %f495;
	mov.f32 	%f498, 0f27C234C5;
	fma.rn.f32 	%f636, %f493, %f498, %f497;
	abs.f32 	%f499, %f137;
	setp.leu.f32	%p52, %f499, 0f47CE4780;
	@%p52 bra 	BB1_48;

	mov.b32 	 %r8, %f137;
	shr.u32 	%r9, %r8, 23;
	bfe.u32 	%r144, %r8, 23, 8;
	add.s32 	%r145, %r144, -128;
	shl.b32 	%r146, %r8, 8;
	or.b32  	%r10, %r146, -2147483648;
	shr.u32 	%r11, %r145, 5;
	mov.u32 	%r240, 0;
	mov.u64 	%rd66, __cudart_i2opi_f;
	mov.u32 	%r239, -6;
	mov.u64 	%rd70, %rd1;

BB1_40:
	.pragma "nounroll";
	mov.u64 	%rd11, %rd70;
	ld.const.u32 	%r149, [%rd66];
	// inline asm
	{
	mad.lo.cc.u32   %r147, %r149, %r10, %r240;
	madc.hi.u32     %r148, %r149, %r10,  0;
	}
	// inline asm
	mov.u32 	%r240, %r148;
	st.local.u32 	[%rd11], %r147;
	add.s64 	%rd12, %rd11, 4;
	add.s64 	%rd66, %rd66, 4;
	add.s32 	%r239, %r239, 1;
	setp.ne.s32	%p53, %r239, 0;
	mov.u64 	%rd70, %rd12;
	@%p53 bra 	BB1_40;

	and.b32  	%r16, %r8, -2147483648;
	st.local.u32 	[%rd1+24], %r148;
	mov.u32 	%r152, 6;
	sub.s32 	%r153, %r152, %r11;
	mul.wide.s32 	%rd61, %r153, 4;
	add.s64 	%rd14, %rd1, %rd61;
	ld.local.u32 	%r241, [%rd14];
	ld.local.u32 	%r242, [%rd14+-4];
	and.b32  	%r19, %r9, 31;
	setp.eq.s32	%p54, %r19, 0;
	@%p54 bra 	BB1_43;

	mov.u32 	%r154, 32;
	sub.s32 	%r155, %r154, %r19;
	shr.u32 	%r156, %r242, %r155;
	shl.b32 	%r157, %r241, %r19;
	add.s32 	%r241, %r156, %r157;
	ld.local.u32 	%r158, [%rd14+-8];
	shr.u32 	%r159, %r158, %r155;
	shl.b32 	%r160, %r242, %r19;
	add.s32 	%r242, %r159, %r160;

BB1_43:
	shr.u32 	%r161, %r242, 30;
	shl.b32 	%r162, %r241, 2;
	add.s32 	%r243, %r161, %r162;
	shl.b32 	%r25, %r242, 2;
	shr.u32 	%r163, %r243, 31;
	shr.u32 	%r164, %r241, 30;
	add.s32 	%r26, %r163, %r164;
	setp.eq.s32	%p55, %r163, 0;
	mov.u32 	%r244, %r16;
	mov.u32 	%r245, %r25;
	@%p55 bra 	BB1_45;

	not.b32 	%r165, %r243;
	neg.s32 	%r27, %r25;
	setp.eq.s32	%p56, %r25, 0;
	selp.u32	%r166, 1, 0, %p56;
	add.s32 	%r243, %r166, %r165;
	xor.b32  	%r29, %r16, -2147483648;
	mov.u32 	%r244, %r29;
	mov.u32 	%r245, %r27;

BB1_45:
	mov.u32 	%r31, %r244;
	neg.s32 	%r167, %r26;
	setp.eq.s32	%p57, %r16, 0;
	selp.b32	%r248, %r26, %r167, %p57;
	clz.b32 	%r247, %r243;
	setp.eq.s32	%p58, %r247, 0;
	shl.b32 	%r168, %r243, %r247;
	mov.u32 	%r169, 32;
	sub.s32 	%r170, %r169, %r247;
	shr.u32 	%r171, %r245, %r170;
	add.s32 	%r172, %r171, %r168;
	selp.b32	%r35, %r243, %r172, %p58;
	mov.u32 	%r173, -921707870;
	mul.hi.u32 	%r246, %r35, %r173;
	setp.lt.s32	%p59, %r246, 1;
	@%p59 bra 	BB1_47;

	mul.lo.s32 	%r174, %r35, -921707870;
	shr.u32 	%r175, %r174, 31;
	shl.b32 	%r176, %r246, 1;
	add.s32 	%r246, %r175, %r176;
	add.s32 	%r247, %r247, 1;

BB1_47:
	mov.u32 	%r177, 126;
	sub.s32 	%r178, %r177, %r247;
	shl.b32 	%r179, %r178, 23;
	add.s32 	%r180, %r246, 1;
	shr.u32 	%r181, %r180, 7;
	add.s32 	%r182, %r181, 1;
	shr.u32 	%r183, %r182, 1;
	add.s32 	%r184, %r183, %r179;
	or.b32  	%r185, %r184, %r31;
	mov.b32 	 %f636, %r185;

BB1_48:
	mul.rn.f32 	%f141, %f636, %f636;
	add.s32 	%r42, %r248, 1;
	and.b32  	%r43, %r42, 1;
	setp.eq.s32	%p60, %r43, 0;
	@%p60 bra 	BB1_50;
	bra.uni 	BB1_49;

BB1_50:
	mov.f32 	%f502, 0f3C08839E;
	mov.f32 	%f503, 0fB94CA1F9;
	fma.rn.f32 	%f637, %f503, %f141, %f502;
	bra.uni 	BB1_51;

BB1_49:
	mov.f32 	%f500, 0fBAB6061A;
	mov.f32 	%f501, 0f37CCF5CE;
	fma.rn.f32 	%f637, %f501, %f141, %f500;

BB1_51:
	@%p60 bra 	BB1_53;
	bra.uni 	BB1_52;

BB1_53:
	mov.f32 	%f507, 0fBE2AAAA3;
	fma.rn.f32 	%f508, %f637, %f141, %f507;
	mov.f32 	%f509, 0f00000000;
	fma.rn.f32 	%f638, %f508, %f141, %f509;
	bra.uni 	BB1_54;

BB1_52:
	mov.f32 	%f504, 0f3D2AAAA5;
	fma.rn.f32 	%f505, %f637, %f141, %f504;
	mov.f32 	%f506, 0fBF000000;
	fma.rn.f32 	%f638, %f505, %f141, %f506;

BB1_54:
	fma.rn.f32 	%f639, %f638, %f636, %f636;
	@%p60 bra 	BB1_56;

	mov.f32 	%f510, 0f3F800000;
	fma.rn.f32 	%f639, %f638, %f141, %f510;

BB1_56:
	and.b32  	%r186, %r42, 2;
	setp.eq.s32	%p63, %r186, 0;
	@%p63 bra 	BB1_58;

	mov.f32 	%f511, 0f00000000;
	mov.f32 	%f512, 0fBF800000;
	fma.rn.f32 	%f639, %f639, %f512, %f511;

BB1_58:
	mov.f32 	%f641, %f134;
	@%p51 bra 	BB1_60;

	mov.f32 	%f513, 0f00000000;
	mul.rn.f32 	%f641, %f134, %f513;

BB1_60:
	mul.f32 	%f514, %f641, 0f3F22F983;
	cvt.rni.s32.f32	%r258, %f514;
	cvt.rn.f32.s32	%f515, %r258;
	neg.f32 	%f516, %f515;
	fma.rn.f32 	%f518, %f516, %f494, %f641;
	fma.rn.f32 	%f520, %f516, %f496, %f518;
	fma.rn.f32 	%f643, %f516, %f498, %f520;
	abs.f32 	%f522, %f641;
	setp.leu.f32	%p65, %f522, 0f47CE4780;
	@%p65 bra 	BB1_70;

	mov.b32 	 %r45, %f641;
	shr.u32 	%r46, %r45, 23;
	bfe.u32 	%r189, %r45, 23, 8;
	add.s32 	%r190, %r189, -128;
	shl.b32 	%r191, %r45, 8;
	or.b32  	%r47, %r191, -2147483648;
	shr.u32 	%r48, %r190, 5;
	mov.u32 	%r250, 0;
	mov.u64 	%rd67, __cudart_i2opi_f;
	mov.u32 	%r249, -6;
	mov.u64 	%rd69, %rd1;

BB1_62:
	.pragma "nounroll";
	ld.const.u32 	%r194, [%rd67];
	// inline asm
	{
	mad.lo.cc.u32   %r192, %r194, %r47, %r250;
	madc.hi.u32     %r193, %r194, %r47,  0;
	}
	// inline asm
	mov.u32 	%r250, %r193;
	st.local.u32 	[%rd69], %r192;
	add.s64 	%rd69, %rd69, 4;
	add.s64 	%rd67, %rd67, 4;
	add.s32 	%r249, %r249, 1;
	setp.ne.s32	%p66, %r249, 0;
	@%p66 bra 	BB1_62;

	and.b32  	%r53, %r45, -2147483648;
	st.local.u32 	[%rd1+24], %r193;
	mov.u32 	%r197, 6;
	sub.s32 	%r198, %r197, %r48;
	mul.wide.s32 	%rd63, %r198, 4;
	add.s64 	%rd19, %rd1, %rd63;
	ld.local.u32 	%r251, [%rd19];
	ld.local.u32 	%r252, [%rd19+-4];
	and.b32  	%r56, %r46, 31;
	setp.eq.s32	%p67, %r56, 0;
	@%p67 bra 	BB1_65;

	mov.u32 	%r199, 32;
	sub.s32 	%r200, %r199, %r56;
	shr.u32 	%r201, %r252, %r200;
	shl.b32 	%r202, %r251, %r56;
	add.s32 	%r251, %r201, %r202;
	ld.local.u32 	%r203, [%rd19+-8];
	shr.u32 	%r204, %r203, %r200;
	shl.b32 	%r205, %r252, %r56;
	add.s32 	%r252, %r204, %r205;

BB1_65:
	shr.u32 	%r206, %r252, 30;
	shl.b32 	%r207, %r251, 2;
	add.s32 	%r253, %r206, %r207;
	shl.b32 	%r62, %r252, 2;
	shr.u32 	%r208, %r253, 31;
	shr.u32 	%r209, %r251, 30;
	add.s32 	%r63, %r208, %r209;
	setp.eq.s32	%p68, %r208, 0;
	mov.u32 	%r254, %r53;
	mov.u32 	%r255, %r62;
	@%p68 bra 	BB1_67;

	not.b32 	%r210, %r253;
	neg.s32 	%r64, %r62;
	setp.eq.s32	%p69, %r62, 0;
	selp.u32	%r211, 1, 0, %p69;
	add.s32 	%r253, %r211, %r210;
	xor.b32  	%r66, %r53, -2147483648;
	mov.u32 	%r254, %r66;
	mov.u32 	%r255, %r64;

BB1_67:
	mov.u32 	%r68, %r254;
	neg.s32 	%r212, %r63;
	setp.eq.s32	%p70, %r53, 0;
	selp.b32	%r258, %r63, %r212, %p70;
	clz.b32 	%r257, %r253;
	setp.eq.s32	%p71, %r257, 0;
	shl.b32 	%r213, %r253, %r257;
	mov.u32 	%r214, 32;
	sub.s32 	%r215, %r214, %r257;
	shr.u32 	%r216, %r255, %r215;
	add.s32 	%r217, %r216, %r213;
	selp.b32	%r72, %r253, %r217, %p71;
	mov.u32 	%r218, -921707870;
	mul.hi.u32 	%r256, %r72, %r218;
	setp.lt.s32	%p72, %r256, 1;
	@%p72 bra 	BB1_69;

	mul.lo.s32 	%r219, %r72, -921707870;
	shr.u32 	%r220, %r219, 31;
	shl.b32 	%r221, %r256, 1;
	add.s32 	%r256, %r220, %r221;
	add.s32 	%r257, %r257, 1;

BB1_69:
	mov.u32 	%r222, 126;
	sub.s32 	%r223, %r222, %r257;
	shl.b32 	%r224, %r223, 23;
	add.s32 	%r225, %r256, 1;
	shr.u32 	%r226, %r225, 7;
	add.s32 	%r227, %r226, 1;
	shr.u32 	%r228, %r227, 1;
	add.s32 	%r229, %r228, %r224;
	or.b32  	%r230, %r229, %r68;
	mov.b32 	 %f643, %r230;

BB1_70:
	mul.rn.f32 	%f158, %f643, %f643;
	and.b32  	%r79, %r258, 1;
	setp.eq.s32	%p73, %r79, 0;
	@%p73 bra 	BB1_72;
	bra.uni 	BB1_71;

BB1_72:
	mov.f32 	%f525, 0f3C08839E;
	mov.f32 	%f526, 0fB94CA1F9;
	fma.rn.f32 	%f644, %f526, %f158, %f525;
	bra.uni 	BB1_73;

BB1_71:
	mov.f32 	%f523, 0fBAB6061A;
	mov.f32 	%f524, 0f37CCF5CE;
	fma.rn.f32 	%f644, %f524, %f158, %f523;

BB1_73:
	@%p73 bra 	BB1_75;
	bra.uni 	BB1_74;

BB1_75:
	mov.f32 	%f530, 0fBE2AAAA3;
	fma.rn.f32 	%f531, %f644, %f158, %f530;
	mov.f32 	%f532, 0f00000000;
	fma.rn.f32 	%f645, %f531, %f158, %f532;
	bra.uni 	BB1_76;

BB1_74:
	mov.f32 	%f527, 0f3D2AAAA5;
	fma.rn.f32 	%f528, %f644, %f158, %f527;
	mov.f32 	%f529, 0fBF000000;
	fma.rn.f32 	%f645, %f528, %f158, %f529;

BB1_76:
	fma.rn.f32 	%f646, %f645, %f643, %f643;
	@%p73 bra 	BB1_78;

	mov.f32 	%f533, 0f3F800000;
	fma.rn.f32 	%f646, %f645, %f158, %f533;

BB1_78:
	and.b32  	%r231, %r258, 2;
	setp.eq.s32	%p76, %r231, 0;
	@%p76 bra 	BB1_80;

	mov.f32 	%f534, 0f00000000;
	mov.f32 	%f535, 0fBF800000;
	fma.rn.f32 	%f646, %f646, %f535, %f534;

BB1_80:
	mul.f32 	%f544, %f133, %f639;
	mul.f32 	%f545, %f544, %f544;
	mov.f32 	%f546, 0f3F800000;
	sub.f32 	%f547, %f546, %f545;
	mul.f32 	%f548, %f133, %f646;
	mul.f32 	%f549, %f548, %f548;
	sub.f32 	%f550, %f547, %f549;
	mov.f32 	%f551, 0f00000000;
	max.f32 	%f552, %f551, %f550;
	sqrt.rn.f32 	%f553, %f552;
	mul.f32 	%f554, %f125, %f548;
	mul.f32 	%f555, %f126, %f548;
	mul.f32 	%f556, %f127, %f548;
	fma.rn.f32 	%f557, %f129, %f544, %f554;
	fma.rn.f32 	%f558, %f130, %f544, %f555;
	fma.rn.f32 	%f559, %f131, %f544, %f556;
	fma.rn.f32 	%f539, %f462, %f553, %f557;
	fma.rn.f32 	%f540, %f463, %f553, %f558;
	fma.rn.f32 	%f541, %f123, %f553, %f559;
	mov.u32 	%r235, 1065353216;
	st.local.u32 	[%rd8], %r235;
	ld.global.f32 	%f543, [aoRadius];
	ld.global.u32 	%r232, [sceneObj];
	mov.f32 	%f542, 0f3C23D70A;
	mov.u32 	%r234, 4;
	// inline asm
	call _rt_trace_64, (%r232, %f1, %f2, %f3, %f539, %f540, %f541, %r81, %f542, %f543, %rd9, %r234);
	// inline asm
	ld.local.f32 	%f560, [%rd8];
	sub.f32 	%f561, %f546, %f560;
	add.f32 	%f647, %f647, %f561;
	ld.global.u32 	%r236, [aoSamples];
	add.s32 	%r238, %r238, 1;
	setp.lt.s32	%p77, %r238, %r236;
	@%p77 bra 	BB1_36;

BB1_81:
	cvt.rn.f32.s32	%f562, %r4;
	rcp.rn.f32 	%f563, %f562;
	ld.global.f32 	%f564, [aoPower];
	mul.f32 	%f565, %f563, %f564;
	mul.f32 	%f648, %f647, %f565;

BB1_82:
	ld.global.v4.f32 	{%f566, %f567, %f568, %f569}, [ambient];
	ld.global.v4.f32 	{%f571, %f572, %f573, %f574}, [sceneAmbient];
	add.f32 	%f576, %f571, %f566;
	add.f32 	%f579, %f572, %f567;
	add.f32 	%f582, %f573, %f568;
	add.f32 	%f583, %f619, %f576;
	add.f32 	%f584, %f613, %f579;
	add.f32 	%f585, %f612, %f582;
	mul.f32 	%f586, %f75, %f583;
	mul.f32 	%f587, %f76, %f584;
	mul.f32 	%f588, %f77, %f585;
	mov.f32 	%f589, 0f3F800000;
	sub.f32 	%f590, %f589, %f648;
	mul.f32 	%f591, %f590, %f586;
	mul.f32 	%f592, %f590, %f587;
	mul.f32 	%f593, %f590, %f588;
	sub.f32 	%f594, %f589, %f14;
	fma.rn.f32 	%f595, %f594, %f591, %f611;
	fma.rn.f32 	%f596, %f594, %f592, %f610;
	fma.rn.f32 	%f597, %f594, %f593, %f609;
	add.f32 	%f598, %f622, %f595;
	add.f32 	%f599, %f623, %f596;
	add.f32 	%f600, %f624, %f597;
	add.f32 	%f601, %f635, %f600;
	add.f32 	%f602, %f634, %f599;
	add.f32 	%f603, %f633, %f598;
	st.global.v4.f32 	[curColorData], {%f603, %f602, %f601, %f589};
	ret;
}


